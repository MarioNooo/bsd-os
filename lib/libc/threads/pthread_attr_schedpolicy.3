.\"
.\" Copyright (c) 1996 Berkeley Software Design, Inc. All rights reserved.
.\" The Berkeley Software Design Inc. software License Agreement specifies
.\" the terms and conditions for redistribution.
.\"
.\" BSDI pthread_attr_schedpolicy.3,v 1.4 1996/12/12 03:03:41 donn Exp
.\" 
.Dd June 3, 1996
.Dt PTHREAD_ATTR_SCHEDPOLICY 3
.Os BSD 4
.Sh NAME
.Nm pthread_attr_getschedpolicy ,
.Nm pthread_attr_setschedpolicy
.Nd pthread scheduling policy attribute objects
.Sh SYNOPSIS
.Fd #include <pthread.h>
.Fd #include <sched.h>
.Ft int
.Fn pthread_attr_getschedpolicy "pthread_attr_t *attr" "int *policy"
.Ft int
.Fn pthread_attr_setschedpolicy "pthread_attr_t *attr" "int policy"
.Sh DESCRIPTION
.Pp
This interface is defined by
.St -p1003.1c .
.Pp
The 
.Fn pthread_attr_getschedpolicy
and
.Fn pthread_attr_setschedpolicy
functions retrieve and establish the threads scheduling policy attribute in the 
attribute object pointed to by
.Fa attr .
The 
.Fa policy 
should be specified as one of:
.Bl -tag -width "SCHED_OTHER\0\0"
.It SCHED_FIFO
All threads created with the creation attribute
.Fa attr 
are scheduled in pre-emptive, priority order.
Rescheduling can occur if a higher priority thread is made runnable
or the current thread explicitly causes another thread to
run by calling
.Fn sched_yield .
.It SCHED_RR
All threads created with the creation attribute
.Fa attr 
are scheduled in pre-emptive, priority order with a time quantum.
Rescheduling can occur if a higher priority thread is made runnable,
the current thread uses up its quantum, or the current thread explicitly
causes another thread to run by calling
.Fn sched_yield .
.It SCHED_OTHER
All threads created with the creation attribute
.Fa attr 
are scheduled in an implementation defined way.  In this implementation
.Dv SCHED_OTHER
is the same as
.Dv SCHED_RR .
.El
.Pp
The default value for 
.Fa policy 
in an attribute object is
.Dv SCHED_RR .
.Sh RETURN VALUES
Upon successful completion, the
.Nm pthread_attr_getschedpolicy
and
.Nm pthread_attr_setschedpolicy
functions return 0.  A non-zero result indicates
an error occurred.
.Sh ERRORS
The
.Nm pthread_attr_getschedpolicy
and
.Nm pthread_attr_setschedpolicy
functions may fail and return the following error:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of a function argument is invalid.
.El
.Sh SEE ALSO
.Xr pthreads 3 ,
.Xr pthread_attr 3 ,
.Xr pthread_create 3 ,
.Xr pthread_join 3 ,
.Xr pthread_detach 3 ,
.Sh STANDARDS
The
.Nm pthread_attr_getschedpolicy
and
.Nm pthread_attr_setschedpolicy
functions conform to
.St -p1003.1c .
.Sh HISTORY
The
.Nm pthread_attr_getschedpolicy
and
.Nm pthread_attr_setschedpolicy
functions first appeared in BSD/OS 3.0.
.Sh BUGS
Specifying 
.Dv SCHED_OTHER
in a call to 
.Fn pthread_attr_setschedpolicy
is non-portable and is discouraged.
