.\"	BSDI getgrent.3,v 2.3 2001/05/18 15:27:35 donn Exp
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getgrent.3	8.2 (Berkeley) 4/19/94
.\"
.Dd April 27, 2001
.Dt GETGRENT 3
.Os
.Sh NAME
.Nm getgrent ,
.Nm getgrnam ,
.Nm getgrgid ,
.Nm setgroupent ,
.Nm setgrent ,
.Nm endgrent ,
.Nm getgrent_r ,
.Nm getgrnam_r ,
.Nm getgrgid_r ,
.Nm setgrent_r ,
.Nm endgrent_r
.Nd group database operations
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <grp.h>
.Ft struct group *
.Fn getgrent void
.Ft struct group *
.Fn getgrnam "const char *name"
.Ft struct group *
.Fn getgrgid "gid_t gid"
.Ft int
.Fn setgroupent "int stayopen"
.Ft int
.Fn setgrent void
.Ft void
.Fn endgrent void
.Ft struct group *
.Fn getgrent_r "struct group *space" "char *buf" "int buflen"
.Ft int
.Fn getgrnam_r "const char *name" "struct group *space" "char *buf" "size_t bufsize" "struct group **result"
.Ft int
.Fn getgrgid_r "gid_t gid" "struct group *space" "char *buf" "size_t bufsize" "struct group **result"
.Ft void
.Fn setgrent_r void
.Ft void
.Fn endgrent_r void
.Sh DESCRIPTION
These functions operate on the group database file
.Pa /etc/group
which is described
in
.Xr group 5 .
Each line of the database is defined by the structure
.Ar group
found in the include
file
.Aq Pa grp.h :
.Bd -literal -offset indent
struct group {
	char	*gr_name;	/* group name */
	char	*gr_passwd;	/* group password */
	gid_t	gr_gid;		/* group id */
	char	**gr_mem;	/* group members */
};
.Ed
.Pp
The functions
.Fn getgrnam
and
.Fn getgrgid
search the group database for the given group name pointed to by
.Ar name
or the group id pointed to by
.Ar gid ,
respectively, returning the first one encountered.  Identical group
names or group gids may result in undefined behavior.
.Pp
The
.Fn getgrent
function
sequentially reads the group database and is intended for programs
that wish to step through the complete list of groups.
.Pp
All three routines will open the group file for reading, if necessary.
.Pp
The
.Fn setgroupent
function
opens the file, or rewinds it if it is already open.  If
.Fa stayopen
is non-zero, file descriptors are left open, significantly speeding
functions subsequent calls.  This functionality is unnecessary for
.Fn getgrent
as it doesn't close its file descriptors by default.  It should also
be noted that it is dangerous for long-running programs to use this
functionality as the group file may be updated.
.Pp
The
.Fn setgrent
function
is identical to
.Fn setgroupent
with an argument of zero.
.Pp
The
.Fn endgrent
function
closes any open files.
.Pp
The ``r-suffixed'' functions
.Fn getgrent_r ,
.Fn getgrnam_r ,
.Fn getgrgid_r ,
.Fn setgrent_r ,
and
.Fn endgrent_r
functions are reentrant versions of their
corresponding non-reentrant functions.  Those that build a
.Ar group
structure must be provided a pointer
.Ar space
to a structure that will hold the result,
as well as a buffer and its size
.Pf ( Ar buflen
or
.Ar bufsize )
for memory to which members of
.Ar space
may be pointed.
The built-up structure will either be returned directly
.Pf ( Fn getgrent_r ) ,
or stored via the
.Ar result
parameter.
This will be
.Dv NULL
if the given group name or ID does not exist.
For example:
.Bd -literal -offset indent
struct group space, *gp;
int error;
char buf[SIZE]; /* where SIZE >= sysconf(_SC_GETGR_R_SIZE_MAX) */
error = getgrnam_r(groupname, &space, buf, sizeof buf, &gp);
if (gp != NULL) {
    /* group exists; gp == &space */
    printf("group %s, gid %ld\en", gp->gr_name, (long)gp->gr_uid);
} else
    ... group does not exist, or an error occurred ...
.Ed
.Sh RETURN VALUES
The functions
.Fn getgrent ,
.Fn getgrent_r ,
.Fn getgrnam ,
and
.Fn getgrgid
return a pointer to the group entry if successful; if end-of-file
is reached or an error occurs a null pointer is returned.
The functions
.Fn getgrnam_r
and
.Fn getgrgid_r
return 0 on success, or an error number on failure.
The functions
.Fn setgroupent
and
.Fn setgrent
return the value 1 if successful, otherwise the value
0 is returned.
The functions
.Fn endgrent ,
.Fn setgrent_r ,
and
.Fn endgrent_r
have no return value.
.Pp
If the buffer supplied to the reentrant functions is too small,
they will fail with an
.Dv ERANGE
error.
The
.Tn POSIX
functions
.Fn getgrnam_r
and
.Fn getgruid_r
will return
.Dv ERANGE ,
while
.Fn getgrent_r
will set the global variable
.Va errno
instead.
.Sh FILES
.Bl -tag -width /etc/group -compact
.It Pa /etc/group
group database file
.El
.Sh SEE ALSO
.Fn getpwent 3 ,
.Fn group 5
.Sh HISTORY
The functions
.Fn endgrent ,
.Fn getgrent ,
.Fn getgrnam ,
.Fn getgrgid ,
and
.Fn setgrent
appeared in
.At v7 .
The function
.Fn setgroupent
appeared in
.Bx 4.3 Reno .
.Sh BUGS
The functions
.Fn getgrent ,
.Fn getgrnam ,
.Fn getgrgid ,
.Fn setgroupent
and
.Fn setgrent
leave their results in an internal static object and return
a pointer to that object. Subsequent calls to
the same function
will modify the same object.
.Pp
The functions
.Fn getgrent ,
.Fn endgrent ,
.Fn setgroupent ,
and
.Fn setgrent
are fairly useless in a networked environment and should be
avoided, if possible.
.Pp
The
.Fn getgrent ,
.Fn endgrent ,
.Fn setgroupent ,
and
.Fn setgrent
functions may not be safely called concurrently from multiple 
threads, e.g., the interfaces described by 
.Fn pthreads 3 .
.Pp
The non-standard functions
.Fn setgrent ,
.Fn setgrent_r ,
.Fn getgrent_r ,
and
.Fn endgrent_r
are known to have different interfaces on different systems,
and should probably be avoided.
.Pp
The
.Dq interesting
calling sequences for the reentrant functions
are courtesy of ongoing standardization efforts.
.Sh COMPATIBILITY
The historic function
.Fn setgrfile ,
which allowed the specification of alternate password databases, has
been deprecated and is no longer available.
.Pp
The
.Fn getgrnam ,
.Fn getgrgid ,
.Fn getgrnam_r ,
and
.Fn getgrgid_r
functions conform to
.St -p1003.1-96 .
