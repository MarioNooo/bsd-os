.\" Copyright (c) 1997 Berkeley Software Design, Inc.  All rights reserved.
.\" The Berkeley Software Design Inc. software License Agreement specifies
.\" the terms and conditions for redistribution.
.\"
.\"	BSDI nlist.3,v 2.2 1997/10/25 15:33:37 donn Exp
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)nlist.3	8.3 (Berkeley) 4/19/94
.\"
.Dd October 18, 1997
.Dt NLIST 3
.Os BSD 4
.Sh NAME
.Nm nlist
.Nd retrieve symbol table name list from an executable file
.Sh SYNOPSIS
.Fd #include <nlist.h>
.Ft int
.Fn nlist "const char *filename" "struct nlist *nl"
.Sh DESCRIPTION
The
.Fn nlist
function
looks up names in the symbol table of an
executable binary file,
and returns the corresponding values.
A value is normally the address of a global variable
in the running image of the executable binary.
.Pp
The argument
.Fa \&nl
should point to an array of
.Fa nlist
structures:
.Bd -literal -offset indent
struct nlist {
	char		*n_name;
	unsigned char	n_type;
	char		n_other;
	short		n_desc;
	unsigned long	n_value;
};
.Ed
.Pp
On input, the
.Fa n_name
fields should be initialized
to the names of symbols that
.Fn nlist
should look for in the symbol table.
All other fields should be set to 0.
The last array element should have its
.Fa n_name
field set to
.Dv NULL .
.Pp
If
.Fn nlist
returns successfully,
then for each array element whose value was found in the symbol table,
the
.Fa n_type
field will be nonzero
and the
.Fa n_value
field will be set to the value of the symbol.
For array elements whose value was not found, the
.Fa n_type
field will be 0.
The
.Fa n_name
fields will not change.
The values of the other fields are not defined.
.Pp
Only global symbols can be matched.
.Sh RETURN VALUES
The number of invalid entries is returned if successful; otherwise,
the value returned is \-1 and the global variable
.Va errno
is set to indicate the error.
.Sh SEE ALSO
.Xr a.out 5 ,
.Xr elf 5
.Sh HISTORY
An
.Fn nlist
function appeared in
.At v6 .
.Sh BUGS
The
.Fa nlist
structure is a variant of the symbol table structure used in
.Xr a.out 5
executable binary files.
When
.Fn nlist
is used with a file that isn't
.Xr a.out 5
format,
the
.Fa n_type
field is at best an approximation of the value that
would be expected in an
.Xr a.out 5
binary,
and the
.Fa n_other
and
.Fa n_desc
fields contain no useful information.
.Pp
Because some symbol table formats prepend an underscore
to names of symbols that derive from names of variables
in high-level languages,
.Fn nlist
will declare a match if it finds a symbol name
that compares equal to the given name with or without its initial underscore.
This
.Sq feature
can sometimes lead to incorrect matches.
