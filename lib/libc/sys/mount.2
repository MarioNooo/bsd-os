.\"	BSDI mount.2,v 2.6 1999/09/15 01:36:44 jch Exp
.\"
.\" Copyright (c) 1980, 1989, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)mount.2	8.3 (Berkeley) 5/24/95
.\"
.Dd January 27, 1997
.Dt MOUNT 2
.Os BSD 4
.Sh NAME
.Nm mount ,
.Nm unmount
.Nd mount or dismount a filesystem
.Sh SYNOPSIS
.Fd #include <sys/param.h>
.Fd #include <sys/mount.h>
.Ft int
.Fn mount "const char *type" "const char *dir" "int flags" "caddr_t data"
.Ft int
.Fn unmount "const char *dir" "int flags"
.Sh DESCRIPTION
The
.Fn mount
function grafts
a filesystem object onto the system file tree
at the point
.Fa dir .
The argument
.Fa data
describes the filesystem object to be mounted.
The argument
.Fa type
tells the kernel how to interpret
.Fa data
(see
.Fa type
below).
The contents of the filesystem
become available through the new mount point
.Fa dir .
Any files in
.Fa dir
at the time
of a successful mount are swept under the carpet so to speak, and
are unavailable until the filesystem is unmounted.
.Pp
The following
.Fa flags
modify the
.Fn mount
operation:
.Bl -tag -width MNT_SYNCHRONOUS_
.It Dv MNT_DELEXPORT
Reset the export state of the filesystem.
The system discards the list of hosts that may access the filesystem remotely,
and clears the
.Dv MNT_EXPORTED
and
.Dv MNT_DEFEXPORTED
flags.
.It Dv MNT_RELOAD
Reload filesystem data.
All cached data for the filesystem,
both metadata and file data,
are invalidated and re-fetched.
The meaning of this flag is undefined
unless it is also used with
.Dv MNT_UPDATE .
The system will return an error if
.Dv MNT_RELOAD
is used on a filesystem that is not currently mounted read-only.
.It Dv MNT_UPDATE
Indicates that the operation is being applied 
to an already mounted filesystem.
This allows the mount flags to be changed without requiring
that the filesystem be unmounted and remounted.
Some filesystems may not allow all flags to be changed.
For example,
most filesystems will not allow a change from read-write to read-only.
.El
.Pp
The following
.Fa flags
may be specified to
alter semantics which affect filesystem access:
.Bl -tag -width MNT_SYNCHRONOUS_
.It Dv MNT_ASYNC
Perform all I/O to the filesystem asynchronously,
including metadata updates.
.Em "Filesystems mounted with this flag face serious risks."
If a crash occurs while a filesystem is mounted with
.Dv MNT_ASYNC ,
filesystem metadata may be inconsistent with file data and with itself.
The
.Xr sync 2
function should be used to force cached data to disk.
.It Dv MNT_AUTOFS
Hide this mount point by default in
.Xr df 1
output.
Used by the automounter to hide it's mount points.
.It Dv MNT_DEFEXPORTED
Export the filesystem for both reading and writing to any Internet host.
.It Dv MNT_EXKERB
Export the filesystem with Kerberos UID mapping.
.It Dv MNT_EXPORTANON
Map all remote accesses to the anonymous user.
.It Dv MNT_EXPORTED
Export the filesystem for reading and writing.
.It Dv MNT_EXRDONLY
Export the filesystem read-only.
.It Dv MNT_NOATIME
Suppress updating of file access times on read/write filesystems.
.It Dv MNT_NODEV
Do not interpret special files on the filesystem.
.It Dv MNT_NOEXEC
Do not allow files to be executed from the filesystem.
.It Dv MNT_NOSUID
Do not honor setuid or setgid bits on files when executing them.
.It Dv MNT_RDONLY
Treat the filesystem as read-only.
Even the super-user may not write on it.
.It Dv MNT_SYNCHRONOUS
Perform all I/O to the filesystem synchronously.
.El
.Pp
The
.Fa type
argument names the filesystem.
The types of filesystems known to the system can be obtained with
.Xr sysctl 8
by using the command:
.Bd -literal -offset indent
sysctl -a vfs
.Ed
.Pp
The type is specified as the second component listed by
.Xr sysctl 8 .
Thus,
.Xr sysctl 8
reports the local filesystem as
.Dq Li vfs.ufs ;
the
.Fa type
argument for the local filesystem is
.Li "\"ufs\"" .
.Pp
.Fa Data
is a pointer to a structure that contains the type
specific arguments to mount.
The format for these argument structures is described in the
manual page for each filesystem.
By convention filesystem manual pages are named
by prefixing
.Dq Li mount_
to the name of the filesystem as returned by
.Xr sysctl 8 .
Thus the
.Nm NFS
filesystem is described by the
.Xr mount_nfs 8
manual page.
.Pp
The
.Fn unmount
function call disassociates the filesystem from the specified
mount point
.Fa dir .
.Pp
The
.Fa flags
argument may specify:
.Bl -tag -width MNT_SYNCHRONOUS_
.It Dv MNT_FORCE
Forcibly unmount the filesystem even if files are
still active.
Active special devices continue to work,
but any further accesses to any other active files result in errors
even if the filesystem is later remounted.
.El
.Sh RETURN VALUES
The
.Fn mount
function returns the value 0 if the mount was successful;
otherwise -1 is returned
and the variable
.Va errno
is set to indicate the error.
.Pp
The
.Fn unmount
function returns the value 0 if the unmount succeeded;
otherwise -1 is returned
and the variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Mount
will fail when one of the following occurs:
.Bl -tag -width [ENOTBLK]
.It Bq Er EPERM
The caller is not the super-user and does not have
the necessary read and/or write permissions on the
mounted from device or does not own the mount point.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 255 characters,
or the entire length of a path name exceeded 1023 characters.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating a pathname.
.It Bq Er ENOENT
A component of
.Fa dir
does not exist.
.It Bq Er ENOTDIR
A component of
.Fa name
is not a directory,
or a path prefix of filesystem-specific special file
is not a directory.
.It Bq Er EINVAL
A pathname contains a character with the high-order bit set,
or a pathname containing a symbolic link was specified.
.It Bq Er EBUSY
Another process currently holds a reference to
.Fa dir .
.It Bq Er EFAULT
.Fa Dir
points outside the process's allocated address space.
.El
.Pp
The following errors can occur for a
.Em ufs
filesystem mount:
.Bl -tag -width [ENOTBLK]
.It Bq Er ENODEV
A component of ufs_args
.Fa fspec
does not exist.
.It Bq Er ENOTBLK
.Fa Fspec
is not a block device.
.It Bq Er ENXIO
The major device number of 
.Fa fspec
is out of range (this indicates no device driver exists
for the associated hardware).
.It Bq Er EBUSY
.Fa Fspec
is already mounted.
.It Bq Er EMFILE
No space remains in the mount table.
.It Bq Er EINVAL
The super block for the filesystem had a bad magic
number or an out of range block size.
If doing an update to set the root device,
the incorrect device has been specified.
.It Bq Er ENOMEM
Not enough memory was available to read the cylinder
group information for the filesystem.
.It Bq Er EIO
An I/O error occurred while reading the super block or
cylinder group information.
.It Bq Er ENOSPC
An attempt has been made to mount an unclean filesystem for writing.
.It Bq Er EROFS
An attempt has been made to mount a filesystem for writing
from a device that currently supports only reading.
.It Bq Er EFAULT
.Fa Fspec
points outside the process's allocated address space.
.El
.Pp
The following errors can occur for a
.Em nfs
filesystem mount:
.Bl -tag -width [ENOTBLK]
.It Bq Er ETIMEDOUT
.Em NFS
timed out trying to contact the server.
.It Bq Er EFAULT
Some part of the information described by nfs_args
points outside the process's allocated address space.
.El
.Pp
The following errors can occur for a
.Em mfs
filesystem mount:
.Bl -tag -width [ENOTBLK]
.It Bq Er EMFILE
No space remains in the mount table.
.It Bq Er EINVAL
The super block for the filesystem had a bad magic
number or an out of range block size.
.It Bq Er ENOMEM
Not enough memory was available to read the cylinder
group information for the filesystem.
.It Bq Er EIO
A paging error occurred while reading the super block or
cylinder group information.
.It Bq Er EFAULT
.Em Name
points outside the process's allocated address space.
.El
.Pp
The
.Fn unmount
function may fail with one of the following errors:
.Bl -tag -width [ENOTBLK]
.It Bq Er EPERM
The caller is not the super-user or is not the user that did the mount.
.It Bq Er ENOTDIR
A component of the path is not a directory.
.It Bq Er EINVAL
The pathname contains a character with the high-order bit set.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 255 characters,
or an entire path name exceeded 1023 characters.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EINVAL
The requested directory is not in the mount table.
.It Bq Er EBUSY
A process is holding a reference to a file located
on the filesystem.
.It Bq Er EIO
An I/O error occurred while writing cached filesystem information.
.It Bq Er EFAULT
.Fa Dir
points outside the process's allocated address space.
.El
.Pp
A
.Em ufs
or
.Em mfs
mount can also fail if the maximum number of filesystems are currently
mounted.
.Sh SEE ALSO
.Xr mount 8 ,
.Xr umount 8 ,
.Xr statfs 2 ,
.Xr sysctl 8
.Sh BUGS
Some of the error codes need translation to more obvious messages.
.Pp
.Dv MNT_ASYNC
and
.Dv MNT_SYNCHRONOUS
are annoyingly inconsistent names.
.Sh HISTORY
.Fn Mount
and
.Fn unmount
function calls appeared in Version 6 AT&T UNIX.
