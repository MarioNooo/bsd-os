.\"	BSDI msync.2,v 2.4 1997/10/22 03:14:13 donn Exp
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)msync.2	8.2 (Berkeley) 6/21/94
.\"
.Dd October 21, 1997
.Dt MSYNC 2
.Os
.Sh NAME
.Nm msync
.Nd synchronize a mapped region
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/mman.h>
.Ft int
.Fn msync "void *addr" "int len" "int flags"
.Sh DESCRIPTION
The
.Fn msync
system call
writes any modified pages back to the filesystem and updates
the file modification time.
If
.Fa len
is 0, all modified pages within the region containing
.Fa addr
will be flushed;
if
.Fa len
is non-zero, only the pages containing
.Fa addr
and
.Fa len
succeeding locations will be examined.
Any required synchronization of memory caches
will also take place at this time.
.Pp
The
.Fa flags
parameter consists of a type and additional flag bits.
The type is mandatory and must be either
.Dv MS_ASYNC
or
.Dv MS_SYNC ,
for asynchronous or synchronous flushing, respectively.
There is currently just one flag:
.Bl -tag -width MS_INVALIDATE\0\0
.It Dv MS_INVALIDATE
Invalidate pages after flushing.
.El
.Sh RETURN VALUES
Upon successful completion,
.Fn msync
will return 0; otherwise a value
of \-1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
The following errors may be reported:
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fa addr
parameter was not page aligned.
.It Bq Er EINVAL
The
.Fa addr
parameter did not specify an address part of a mapped region.
.It Bq Er EINVAL
The
.Fa len
parameter was negative.
.It Bq Er EIO
An I/O error occured while writing to the file system.
.El
.Sh SEE ALSO
.Xr madvise 2 ,
.Xr munmap 2 ,
.Xr mprotect 2 ,
.Xr mincore 2
.Sh HISTORY
The
.Fn msync
function first appeared in 4.4BSD.
.Sh BUGS
This interface is not compatible with the traditional BSD interface.
The
.Fa flags
parameter is currently ignored,
so two-parameter calls to
.Fn msync
are safe, but this will change in future releases.
.Pp
The
.Fn msync
function exposes some of the system's caching policy.
If you map a file for shared updates,
running
.Fn msync
to update a region of the file will have
the same caching behavior as using
.Fn write
with the same data to update that region of the file.
If you don't use
.Fn msync
to update a mapped file,
then any changes may be cached until a
.Fn read
or
.Fn write
operation on that region of the file forces synchronization.
This may occur long after the process that mapped the file
has closed the file descriptor, or for that matter,
long after it has exited.
.Pp
Note that
.Fn msync
does not commit the data to disk.
Use
.Xr fsync 2
to ensure that data gets written out.
