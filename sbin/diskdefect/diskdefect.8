.\"	BSDI diskdefect.8,v 1.3 1992/01/04 19:13:09 kolstad Exp
.\"
.\" Copyright (c) 1980, 1988, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from @(#)diskdefect.8	6.7 (Berkeley) 3/16/91
.\"
.Dd March 16, 1991
.Dt DISKDEFECT 8
.Os BSD 4
.Sh NAME
.Nm diskdefect
.Nd read/write standard bad sector information
.Sh SYNOPSIS
.Nm diskdefect
.Op Fl acnswvy
.Op Fl b Ar bad-block-info
.Op Fl C Ar copy-retries
.Op Fl g Ar geometry-label
.Op Fl t Ar replacement-type
.Ar disk
.Oo
.Ar disk-snum
.Op Ar bad-block ...
.Oc
.Sh DESCRIPTION
.Nm Diskdefect
can be used to inspect and/or change the information stored on a disk that is
used by the disk drivers to implement bad sector forwarding.
The
.Nm diskdefect
program is capable of using several different bad-block formats.
At present, however, only the
.Xr bad144 5
format and a special type called
.Dq null
are supported.
The null format is never stored on disk,
and can be used to run a simple reliability scan.
.Pp
Available options:
.Pp
.Bl -tag -width Ds
.It Fl a
The argument list (and the results of the
disk scan if the
.Fl s
or
.Fl w
options were given) are new bad sectors to be added to an
existing bad-block table.
The new replacement sectors will be filled with zero bytes unless the
.Fl c
or
.Fl C
flags are used.
.Pp
If invoked without the
.Fl a
option
.Nm diskdefect
will overwrite the existing bad-block table and you must specify a new
disk serial number to be stored with the bad-block table.
.It Fl b Ar bad-block-info
Controls how the bad block map is handled.
.Pp
For the bad144 format,
.Ar bad-block-info
may be a digit in 0 through 4;
this specifies which copy of the bad block information to use.
Only that copy is loaded and updated.
The default is to search for a good header,
and to update all the copies.
.It Fl c
Forces an attempt to copy the old sector to the replacement.
This may be useful when replacing an unreliable sector.
Ten attempts will be made to read the original data.
.It Fl C Ar copy-retries
Similar to
.Fl c ,
but allows the number of retries to be specified.
.It Fl g Ar geometry-label
Allows
.Nm diskdefect
to proceed on an unlabeled disk.
Rather than reading the disk geometry from the pack label,
.Nm diskdefect
will use the specified type from
.Xr disktab 5 .
.It Fl t Ar replacement-type
Tells
.Nm diskdefect
to use the specified type of bad block replacement.
By default,
.Nm diskdefect
will choose the correct type for the disk,
but if desired, the default type can be overridden.
Note that this has no effect on the underlying driver;
using the wrong type of bad block replacement
is not likely to do anything useful.
Thus,
.Fl t
really exists only to set the null replacement type.
.It Fl n
Disables writing the bad-block table to disk (no write mode).
This option is like the
.Fl n
option to the
.Xr make 1
and
.Xr sh 1
programs.
This is independent of the
.Fl w
option.
.It Fl s
Scans the disk and collects sectors that
could not be read (or with the
.Fl w
option, written).  With the
.Fl v
(verbose) option,
.Fl s
will print a cylinder map with periods (.) for good cylinders
and x's for bad cylinders and at the end will print a bad-block
summary containing the logical sector number, cylinder,
head, and sector of the error.  When scanning sector by sector
it spins the sequence '/', '-', '\e', '|'.
.It Fl w
Like
.Fl s ,
but rewrites each cylinder after reading it.
(This tests the disk a little more thoroughly.)
.Pp
WARNING: Use
.Fl w
with caution and only on idle disks.  Between reading data
and writing it back out the system may have changed it.
.It Fl v
The entire process is described as it happens in gory detail if
.Fl v
(verbose) is given.
.It Fl y
Don't ask any questions (assumes yes).
.El
.Pp
The
.Nm diskdefect
program
is invoked by giving a device name (e.g. wd0, wd1, etc.).
With no optional arguments
it reads the current defect list
of the corresponding disk and prints out the bad sector information.
It issues a warning if the list is out of order.
The
.Nm diskdefect
program
may also be invoked with a serial number for the pack and a list
of bad sectors.
It will write the supplied information into all copies
of the bad-sector file, replacing any previous information.
Note, however, that 
.Nm diskdefect
does not arrange for the specified sectors to be marked bad in this case.
This procedure should only be used to restore known bad sector information
which was destroyed.
.Pp
It is no longer necessary to reboot to allow the kernel
to reread the bad-sector table from the drive.
.Sh EXAMPLES
.Bl -tag -width Ds
.It diskdefect -swcv wd0 12345678
Initialize the bad-block table to the result of the scan (erase any
existing bad-block information).
Set the disk serial number to 12345678.
Attempt to copy the old data to the replacement sectors, if that
fails zero the replacement sector.
.It diskdefect -a -swcv wd0
Scan the disk (read and write) and add any new bad sectors the the
existing bad-block table.  Attempt to copy the old data to the replacement
sectors, if that fails zero the replacement sector.
.El
.Sh SEE ALSO
.Xr bad144 5 ,
.Xr disktab 5 ,
.Xr badsect 8
.\" .Xr format 8 -- there is no format(8)
.Sh BUGS
It should be possible to format disks on-line under
.Tn BSD .
.Pp
It should be possible to mark bad sectors on drives of all types.
.Pp
More thorough (but destructive)
.Dq worst case pattern
writes should be available.
.\" XXX -- while a bug, the following is not diskdefect's fault!
.\" Anyway, it seems to be fixed in the current wd.c.
.\" .Pp
.\" Some drivers that write a system core image on disk after a crash do not
.\" handle errors; thus the crash dump area must be free of errors and bad
.\" sectors.
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.1 
as bad144(8).  It has been merged with drck(8) at BSDI, and
the name changed to be more intuitive and otherwise protect the
innocent.
