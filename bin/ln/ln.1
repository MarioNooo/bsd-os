.\" Copyright (c) 1980, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)ln.1	8.2 (Berkeley) 12/30/93
.\"
.Dd December 30, 1993
.Dt LN 1
.Os BSD 4
.Sh NAME
.Nm ln
.Nd make links
.Sh SYNOPSIS
.Nm ln
.Op Fl fs
.Ar file
.Op link_name
.Nm ln
.Op Fl fs
.Ar file ...
.Op directory
.Sh DESCRIPTION
The
.Nm ln
utility creates a new directory entry, i.e. a new name in the filesystem.
There are two types of links:
.Em hard
links and
.Em symbolic
links.
.Pp
By default
.Nm ln
makes hard links.
A hard link to a file is indistinguishable from the original file,
for example,
the link has the same file permission modes as the original file.
This permits multiple names for a file without using up filesystem
space for multiples copies of the file.
Any changes made to the file are independent of the name used to
reference the file.
Removing the file (by any name) will not remove the file's contents
until the removal of the last name for the file.
.Pp
Hard links may only refer to existing files,
may not refer to directories and may not span file systems.
.Pp
A symbolic link contains the name of the file to which it is linked,
and should be thought of as an indirection instead of as a copy.
This indirection is accomplished automatically by the system,
e.g., the command
.Dq "cat symbolic_link"
will display the file the symbolic link references, and not the symbolic
link itself.
This permits multiple names for files as well as short-hand paths for
long directory paths, e.g.,
.Dq /sys
for
.Dq /usr/src/sys/ .
Removing the symbolic link will remove only the link,
and will not delete the file's contents.
.Pp
The owner, group, permissions, modification time,
etc. of a symbolic link are taken from the directory in which it resides,
and are therefore not useful or meaningful.
Symbolic links may refer to (currently) nonexistent files,
span file systems, and refer to directories.
.Pp
The options are as follows:
.Bl -tag -width flag
.It Fl f
Unlink any already existing file with the same name as the link file,
permitting the link file to be created.
.It Fl s
Create a symbolic link instead of the default hard link.
.El
.Pp
Given one argument,
.Nm ln
creates a link to the file
.Ar file ,
in the current directory.
The link is named with the last component of
.Ar file .
.Pp
Given two arguments where the second argument is not a directory,
.Nm ln
creates a link to the file
.Ar file ,
named
.Ar link_name .
.Pp
Given two or more arguments where the last argument is a directory,
.Nm ln
creates links to the
.Ar file
arguments,
in the specified directory.
Each link is named with the last component of the respective
.Ar file
argument.
.Pp
Some system calls reference the symbolic link itself; see
.Xr readlink 2
and
.Xr stat 2
for further information.
For an exhaustive discussion of symbolic links,
their similarities and differences with hard links,
and their behavior in the system, see 
.Xr symlink 7 .
.Sh SEE ALSO
.Xr link 2 ,
.Xr lstat 2 ,
.Xr readlink 2 ,
.Xr stat 2 ,
.Xr symlink 2 ,
.Xr symlink 7
.Sh HISTORY
A
.Nm ln
command appeared in
.At v6 .
