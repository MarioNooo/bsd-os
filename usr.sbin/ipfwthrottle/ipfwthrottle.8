.\"	BSDI	ipfwthrottle.8,v 1.1 2000/01/24 22:07:35 prb Exp
.\"
.\" Copyright (c) 1999 Berkeley Software Design, Inc.
.\" All rights reserved.
.\" The Berkeley Software Design Inc. software License Agreement specifies
.\" the terms and conditions for redistribution.
.\"
.Dd Dec 1, 1999
.Dt IPFWTHROTTLE 8
.Sh NAME
.Nm ipfwthrottle
.Nd throttle IP packet flows
.Sh SYNOPSIS
.Nm ipfwthrottle
.Op Fl ASDnv
.Op Fl b Ar buckets
.Op Fl m Ar mask
.Op Fl s Ar serial
.Op Fl t Ar when
.Op Fl T Ar tag
.Op Fl x Ar max
.Op Ar packets/seconds
.Sh DESCRIPTION
The
.Nm ipfwthrottle
utility is used limit the number of packets per second for a given class of
IP packets.  For instance, it may be used to limit the number of SMTP
sessions between a pair of hosts to 25 each minute, or the number of DNS
requests from a given host to 50 per second.  This is different from
.Xr ipfwrate 8 ,
which limits the bit rate at which packets may depart the system.
.Pp
Each instance of a throttle filter, a cache of sessions is maintained.
A hash function is applied to choose a bucket and a linked list is used
from there to find the correct entry.
A session is defined by one or more of the following:
source IP address,
destination IP address,
source port, and
destination port.
By default only the source and destination IP addresses are used.
.Pp
A throttle filter is always installed on the
.Nm call
filter point
(see
.Xr ipfw 8 ) .
.Pp
With no arguments (options only), statistics about the sessions being
throttled are displayed.
.Pp
If the single
.Ar packets/second
argument is provided, it specifies how many packets may be sent in the
given span of time.
Note that 5/1 and 50/10 are different.  5/1 says up to 5 packets may be
sent in a space of 1 second. 50/10 says up to 50 packets may be sent in
the space of 10 seconds, and all 50 packets might be in the fraction of
the first second, followed by nearly 10 seconds of no packets allowed.
.Pp
The following options are available:
.Bl -tag -width indent
.It Fl A
Ignore the addresses when determining the session.
.It Fl b Ar buckets
Set the number of hash buckets to be used to 
.Ar buckets .
The default setting of 997 is probably good for most situations.
If you are expecting a large number of simultaneous sessions you may
want to increase this value.  The value should be reasonably
prime.  To support about 50,000 sessions a value of 9977
would probably work fine.
.It Fl D
Only use the destination IP address for determining the session.
.It Fl m Ar mask
Use the bits specified by
.Ar mask
in the first 4 bytes of IP data to further qualify this session (beyond
the source and destination addresses).  This is mainly used for TCP
and UDP.  Use 0x0000ffff for destination port only, 0xffff0000 for source
port only and 0xffffffff for both destination and source ports.  The default
is 0, i.e., the IP data is ignored.
.It Fl n
Do not sort output when displaying.
.It Fl S
Only use the source IP address for determining the session.
.It Fl s Ar serial
Display only the information for the specified
.Ar serial
number.
.It Fl t Ar when
Expire all sessions that are older than
.Ar when
seconds.
Times may be modified with s, m, h, d, w, and y to specify seconds,
minutes, hours, days, weeks and years.  For example: 1m30s is 1 minute
and 30 seconds.  A year is always considered to have 365 days.
.It Fl T Ar tag
Specify the
.Ar tag
to be used.  If this is not specified then a tag will be generated by
the system.  It is almost always wrong to not specify a tag as the tag
is how other filters specify the throttle filter.
.It Fl v
Provide additional information while running.
.It Fl x Ar max
Limit set the maximum number of entries to
.Ar max .
If more than
.Ar max
entries are needed the oldest entries are removed to make room for the
new entries.
.El
.Sh HOW TO USE
Multiple throttle filters may be used and they may be called at
different filtering points.  The most common filter points are
.Nm input
and
.Nm forward
(see
.Xr ipfw 8 ) .
A single throttle filter may filter multiple types of connections, however,
only a single rate can be applied and the protocol is not considered.
In general you should have a new throttle filter for each IP protocol
being examined.
This example will assume the site is throttling SMTP and DNS requests into
the local machine.  It wants to limit the SMTP requests to 25 per minute and
the DNS requests to 50 per second.  The following two commands would be
issued:
.Bd -literal -offset indent
ipfwthrottle -m 0xffffffff -T SMTP-throttle 25/60
ipfwthrottle -m 0xffffffff -T DNS-throttle 50/1
.Ed
.Pp
An input filter is then constructed which contains the code fragment:
.Bd -literal -offset indent
tcp && dstport(smtp/tcp) && !established && !call("SMTP-throttle") {
	reject;
}
udp && dstport(domain/udp) && !call("DNS-throttle") {
	reject;
}
.Ed
.Pp
In each case, the standard IPFW language is used to determine if the packet
should be subject to throttling.  Once it is determined that this packet type
is subject to throttling the throttle filter is called.  If the filter
does not return success we reject the packet (the throttle filter returns
a true value if the packet should be allowed and a false value if it should
not be allowed.)
.Sh SEE ALSO
.Xr ipfw 8, ipfwcmp 8
