#	BSDI bsd_transform.x,v 2.2 1996/08/20 17:39:21 donn Exp
void	 exit(int);
pid_t	 fork(void);
ssize_t	 read(fd_t, void *, size_t) blocking;
ssize_t	 write(fd_t, const void *, size_t) blocking;
fd_t	 open(filename_t, int, mode_t) blocking, emulated;
int	 close(fd_t) blocking;
pid_t	 wait4(pid_t, int *, int, struct rusage *) blocking;
fd_t	 creat(filename_t, mode_t) emulated;
int	 link(filename_t, filename_t) emulated;
int	 unlink(filename_t) emulated;
int	 nosys(void);
int	 chdir(filename_t) emulated;
int	 fchdir(fd_t) emulated;
int	 mknod(filename_t, mode_t, dev_t) emulated;
int	 chmod(filename_t, mode_t) emulated;
int	 chown(filename_t, uid_t, gid_t) emulated;
int	 brk(const char *) emulated;
int	 getfsstat(struct statfs *, long, int);
long	 olseek(fd_t, long, int);
pid_t	 getpid(void);
int	 mount(const char *, filename_t, int, void *) emulated;
int	 unmount(filename_t, int) emulated;
int	 setuid(uid_t);
uid_t	 getuid(void);
uid_t	 geteuid(void);
int	 ptrace(int, pid_t, caddr_t, int);
int	 recvmsg(fd_t, struct msghdr *, int);
int	 sendmsg(fd_t, const struct msghdr *, int);
int	 recvfrom(fd_t, void *, int, int,
fd_t	 accept(fd_t, struct sockaddr *, int *);
int	 getpeername(fd_t, struct sockaddr *, int *);
int	 getsockname(fd_t, struct sockaddr *, int *);
int	 access(filename_t, int) emulated;
int	 chflags(filename_t, long) emulated;
int	 fchflags(fd_t, long);
void	 sync(void);
int	 kill(pid_t, int);
int	 nosys(void);
pid_t	 getppid(void);
int	 nosys(void);
fd_t	 dup(fd_t);
int	 pipe(fd_t *);
gid_t	 getegid(void);
int	 profil(char *, int, int, int);
int	 ktrace(filename_t, int, int, pid_t) emulated;
int	 sigaction(int, const struct sigaction *, struct sigaction *) blocking;
gid_t	 getgid(void);
int	 sigprocmask(int, const sigset_t *, sigset_t *) blocking;
int	 getlogin(char *, u_int);
int	 setlogin(const char *);
int	 acct(filename_t) emulated;
int	 sigpending(sigset_t *);
int	 sigaltstack(const stack_t *, stack_t *);
int	 ioctl(fd_t, unsigned long, int);
int	 reboot(int);
int	 revoke(filename_t) emulated;
int	 symlink(filename_t, filename_t) emulated;
int	 readlink(filename_t, char *, int) emulated;
int	 execve(filename_t, char * const *, char * const *) emulated;
mode_t	 umask(mode_t);
int	 chroot(filename_t) emulated;
int	 fstat(fd_t, struct stat *);
int	 getkerninfo(int, int, int, int);
int	 getpagesize(void);
int	 msync(caddr_t, int);
pid_t	 vfork(void) emulated;
int	 nosys(void);
int	 nosys(void);
char	 *sbrk(int);
int	 sstk(int);
caddr_t	 ommap(caddr_t, size_t, int, int, fd_t, long);
int	 nosys(void);
int	 munmap(caddr_t, int);
int	 mprotect(caddr_t, int, int);
int	 madvise(int, int, int);
int	 nosys(void);
int	 nosys(void);
int	 mincore(int, int, int);
int	 getgroups(int, gid_t *);
int	 setgroups(int, const gid_t *);
pid_t	 getpgrp(void);
int	 setpgid(pid_t, pid_t);
int	 setitimer(int, const struct itimerval *, struct itimerval *);
pid_t	 wait(int *);
int	 swapon(filename_t) emulated;
int	 getitimer(int, struct itimerval *);
int	 gethostname(char *, int);
int	 sethostname(const char *, int);
int	 getdtablesize(void);
fd_t	 dup2(fd_t, int);
int	 nosys(void);
int	 fcntl(fd_t, int, int) blocking;
int	 select(int, fd_set *, fd_set *, fd_set *, struct timeval *) blocking;
int	 nosys(void);
int	 fsync(fd_t);
int	 setpriority(int, int, int);
fd_t	 socket(int, int, int);
int	 connect(fd_t, const struct sockaddr *, int) blocking;
fd_t	 accept(fd_t, struct sockaddr *, int *) blocking;
int	 getpriority(int, int);
int	 send(fd_t, const void *, int, int);
int	 recv(fd_t, void *, int, int) blocking;
int	 sigreturn(struct sigcontext *) blocking;
int	 bind(fd_t, const struct sockaddr *, int);
int	 setsockopt(fd_t, int, int, const void *, int);
int	 listen(fd_t, int);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 sigsuspend(const sigset_t *) blocking;
int	 sigstack(const struct sigstack *, struct sigstack *) blocking;
int	 recvmsg(fd_t, struct msghdr *, int) blocking;
int	 sendmsg(fd_t, const struct msghdr *, int);
int	 nosys(void);
int	 gettimeofday(struct timeval *, struct timezone *);
int	 getrusage(int, struct rusage *);
int	 getsockopt(fd_t, int, int, void *, int *);
int	 nosys(void);
int	 readv(fd_t, const struct iovec *, int) blocking;
int	 writev(fd_t, const struct iovec *, int) blocking;
int	 settimeofday(const struct timeval *, const struct timezone *);
int	 fchown(fd_t, int, int);
int	 fchmod(fd_t, mode_t);
int	 recvfrom(fd_t, void *, int, int, struct sockaddr *, int *) blocking;
int	 setreuid(int, int);
int	 setregid(int, int);
int	 rename(filename_t, filename_t) emulated;
int	 otruncate(filename_t, long) emulated;
int	 oftruncate(fd_t, long);
int	 flock(fd_t, int);
int	 mkfifo(filename_t, mode_t) emulated;
int	 sendto(fd_t, const void *, int, int, const struct sockaddr *, int);
int	 shutdown(fd_t, int);
int	 socketpair(int, int, int, fd_t *);
int	 mkdir(filename_t, mode_t) emulated;
int	 rmdir(filename_t) emulated;
int	 utimes(filename_t, const struct timeval *) emulated;
int	 nosys(void);
int	 adjtime(const struct timeval *, struct timeval *);
int	 getpeername(fd_t, struct sockaddr *, int *);
long	 gethostid(void);
void	 sethostid(long);
int	 ogetrlimit(int, struct rlimit *);
int	 osetrlimit(int, const struct rlimit *);
int	 killpg(pid_t, int);
pid_t	 setsid(void);
int	 quotactl(filename_t, int, int, char *) emulated;
int	 nosys(void);
int	 getsockname(fd_t, struct sockaddr *, int *);
int	 sem_lock(sem_t *) blocking;
int	 sem_wakeup(sem_t *);
int	 nosys(void);
int	 nosys(void);
int	 nfssvc(fd_t, char *);
int	 ogetdirentries(fd_t, char *, unsigned, long *);
int	 statfs(filename_t, struct statfs *, int, int) emulated;
int	 fstatfs(fd_T, struct statfs *);
int	 nosys(void);
int	 async_daemon(void);
int	 getfh(filename_t, fhandle_t *) emulated;
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 getdescriptor(int, int);
int	 setdescriptor(int, int);
int	 setgid(gid_t);
int	 setegid(gid_t);
int	 seteuid(uid_t);
int	 lfs_bmapv(void);
int	 lfs_markv(void);
int	 lfs_segclean(void);
int	 lfs_segwait(void);
int	 stat(filename_t, struct stat *) emulated;
int	 fstat(fd_t, struct stat *);
int	 lstat(filename_t, struct stat *) emulated;
int	 pathconf(filename_t, int) emulated;
int	 fpathconf(int, int);
int	 nosys(void);
int	 getrlimit(int, struct rlimit *);
int	 setrlimit(int, const struct rlimit *);
int	 getdirentries(fd_t, char *, unsigned, long *);
# implemented using __syscall; we never see it
caddr_t	 mmap(caddr_t, size_t, int, int, fd_t, int, off_t);
int	 __syscall(void);
# the next three are also done with __syscall(); truncate() SHOULD BE EMULATED
off_t	 lseek(fd_t, int, off_t, int);
int	 truncate(filename_t, int, off_t);
int	 ftruncate(fd_t, int, off_t);
int	 __sysctl(int, int, int, int, int, int);
int	 mlock(caddr_t, size_t);
int	 munlock(caddr_t, size_t);
# XXX undelete() isn't supported yet
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 nosys(void);
int	 __semctl(int, int, int, union semun *);
int	 semget(int, struct sembuf *, unsigned);
int	 semop(int, struct sembuf *, unsigned);
int	 nosys(void);
int	 msgctl(int, int, struct msgqid_ds *);
int	 msgget(key_t, int);
int	 msgsnd(int, void *, size_t, int);
int	 msgrcv(int, void *, size_t, long, int);
int	 shmat(int, void *, int);
int	 shmctl(int, int, struct shmid_ds *);
int	 shmdt(void *);
int	 shmget(key_t, int, int);
